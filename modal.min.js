function editNav() {
  var e = document.getElementById("myTopnav");
  "topnav" === e.className
    ? (e.className += " responsive")
    : (e.className = "topnav");
}
const modalbg = document.querySelector(".bground"),
  modalBtn = document.querySelectorAll(".modal-btn"),
  form = document.getElementById("form"),
  formData = document.querySelectorAll(".formData"),
  submitBtn = document.getElementById("btn-submit"),
  confirmationMessage = document.getElementById("confirmation"),
  modalClose = document.querySelector(".close"),
  firstName = document.getElementById("first"),
  lastName = document.getElementById("last"),
  email = document.getElementById("email"),
  birthDate = document.getElementById("birthdate"),
  tournamentsAttended = document.getElementById("quantity"),
  radioButtons = document.querySelectorAll("[name='location']"),
  radioButtonsArray = Array.from(radioButtons),
  termsAndCons = document.getElementById("checkbox1"),
  regExEmail = new RegExp("^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$"),
  regExDate = new RegExp(
    "(19[0-9][0-9]|20[0-4][0-9]|2050)[-](0?[1-9]|1[0-2])[-]([0][1-9]|[12][0-9]|3[01])$"
  ),
  errorMessages = {
    first: "Please enter 2+ characters for name field.",
    last: "Please enter 2+ characters for name field.",
    email: "Please enter a valid email address.",
    birthdate: "Please enter your date of birth.",
    quantity: "Please enter a number between 0 and 99.",
    location1: "Please choose one option.",
    checkbox1: "Please agree to the terms and conditions.",
  };
function launchModal() {
  modalbg.style.display = "block";
}
function closeModal() {
  (modalbg.style.display = "none"),
    form.reset(),
    removeInvalidStyling(),
    removeConfirmation();
}
function getInvalidElements() {
  let e = [];
  return (
    firstName.validity.valid || e.push(firstName),
    lastName.validity.valid || e.push(lastName),
    regExEmail.test(email.value) || e.push(email),
    regExDate.test(birthDate.value) || e.push(birthDate),
    isNaN(parseInt(tournamentsAttended.value)) && e.push(tournamentsAttended),
    radioButtonsArray.some((e) => e.checked) || e.push(radioButtons[0]),
    termsAndCons.checked || e.push(termsAndCons),
    e
  );
}
function styleInvalidElements(e) {
  for (let t = 0; t < e.length; t++) {
    let n = e[t].getAttribute("id"),
      a = e[t].parentElement;
    a.setAttribute("data-error-visible", "true"),
      a.setAttribute("data-error", errorMessages[n]);
  }
}
function removeInvalidStyling() {
  formData.forEach((e) => e.removeAttribute("data-error-visible")),
    formData.forEach((e) => e.removeAttribute("data-error"));
}
function onSubmit(e) {
  e.preventDefault(), removeInvalidStyling();
  let t = getInvalidElements();
  0 === t.length
    ? (console.log("submitted!"), setConfirmation())
    : styleInvalidElements(t);
}
function setConfirmation() {
  (confirmationMessage.style.display = "flex"),
    (submitBtn.value = "Close"),
    form.removeEventListener("submit", onSubmit),
    form.addEventListener("click", (e) => {
      e.preventDefault(), closeModal();
    });
}
function removeConfirmation() {
  (confirmationMessage.style.display = "none"),
    (submitBtn.value = "Go"),
    form.removeEventListener("click", (e) => {
      e.preventDefault(), closeModal();
    }),
    form.addEventListener("submit", onSubmit);
}
modalBtn.forEach((e) => e.addEventListener("click", launchModal)),
  modalClose.addEventListener("click", closeModal),
  form.addEventListener("submit", onSubmit);
